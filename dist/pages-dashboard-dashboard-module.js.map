{"version":3,"sources":["./src/app/pages/dashboard/dashboard.component.html","./src/app/models/dashboardDataObjects.ts","./src/app/models/testMetric.ts","./src/app/models/testSystem.ts","./src/app/pages/dashboard/dashboard.component.scss","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/dashboard.routing.ts","./src/app/services/dasboardService.ts"],"names":[],"mappings":"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","file":"pages-dashboard-dashboard-module.js","sourcesContent":["export default \"<div class=\\\" content\\\">\\n  <div class=\\\" row\\\">\\n    <div class=\\\" col-12\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\" pad-down10 btn-group btn-group-toggle float-right\\\" data-toggle=\\\"buttons\\\">\\n          <label class=\\\" btn btn-sm btn-danger btn-simple\\\" (click)=\\\"data = allTestExecutions; updateOptions('allClicked');\\\" [ngClass]=\\\"{ active: dashBoardDataObjects.allClicked === true }\\\">\\n            <input checked=\\\"checked\\\" name=\\\"options\\\" type=\\\"radio\\\" />\\n            <span class=\\\" d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">All</span>\\n            <span class=\\\" d-block d-sm-none\\\">\\n              <i class=\\\" et-icons icon-single-02\\\"> </i>\\n            </span>\\n          </label>\\n          <label class=\\\" btn btn-sm btn-danger btn-simple\\\" (click)=\\\"data = publicSecurityExecutions; updateOptions('psClicked');\\\" [ngClass]=\\\"{ active: dashBoardDataObjects.psClicked === true }\\\">\\n            <input checked=\\\"checked\\\" name=\\\"options\\\" type=\\\"radio\\\" />\\n            <span class=\\\" d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Public Security</span>\\n            <span class=\\\" d-block d-sm-none\\\">\\n              <i class=\\\" et-icons icon-single-02\\\"> </i>\\n            </span>\\n          </label>\\n          <label class=\\\" btn btn-sm btn-danger btn-simple\\\" (click)=\\\"data = dbExecutions; updateOptions('ciClicked');\\\"[ngClass]=\\\"{ active: dashBoardDataObjects.ciClicked === true }\\\">\\n            <input checked=\\\"checked\\\" name=\\\"options\\\" type=\\\"radio\\\" />\\n            <span class=\\\" d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Civil Identity</span>\\n            <span class=\\\" d-block d-sm-none\\\">\\n              <i class=\\\" et-icons icon-single-02\\\"> </i>\\n            </span>\\n          </label>\\n          <label class=\\\" btn btn-sm btn-danger btn-simple\\\" (click)=\\\"data = osExecutions; updateOptions('dgClicked');\\\" [ngClass]=\\\"{ active: dashBoardDataObjects.dgClicked === true }\\\">\\n            <input class=\\\" d-none d-sm-none\\\" name=\\\"options\\\" type=\\\"radio\\\"/>\\n            <span class=\\\" d-none d-sm-block d-md-block d-lg-block d-xl-block\\\">Digital</span>\\n            <span class=\\\" d-block d-sm-none\\\">\\n              <i class=\\\" et-icons icon-gift-2\\\"> </i>\\n            </span>\\n          </label>\\n          <label class=\\\" btn btn-sm btn-warning btn-simple\\\">\\n            <div class=\\\"info-icon text-center icon-warning\\\" (click)=\\\"downloadFile();\\\" style=\\\"width: 40px;\\\">\\n              <i class=\\\" et-icons icon-cloud-download-93\\\"> </i>\\n            </div>\\n          </label>\\n        </div>\\n      </div>\\n      <div class=\\\" card card-chart\\\">\\n        <div class=\\\" card-header\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-sm-6 text-left\\\">\\n              <h5 class=\\\" card-category\\\">Test Executions</h5>\\n              <h2 class=\\\" card-title\\\">{{dashBoardDataObjects.executionChartText}}</h2>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\"chart-area\\\"><canvas id=\\\"totalExecutionsChart\\\"> </canvas></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-6\\\">\\n      <div class=\\\" card card-chart card-chart-pie\\\">\\n        <div class=\\\" card-header\\\">\\n          <h5 class=\\\" card-category\\\">Test Executions</h5>\\n          <h2 class=\\\" card-title\\\">Pass/Fail %</h2>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-6\\\">\\n              <div class=\\\"chart-area\\\"><canvas id=\\\"passfailperc\\\"> </canvas></div>\\n            </div>\\n            <div class=\\\" col-6\\\">\\n              <h4 class=\\\" card-title\\\">\\n                <i class=\\\" tim-icons icon-trophy text-success\\\"> </i> Executions: {{dashBoardDataObjects.totalExecutions}}\\n              </h4>\\n              <p class=\\\" category\\\">A pass rate of {{dashBoardDataObjects.passFailPercent}}%</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-6\\\">\\n      <div class=\\\" card card-chart\\\">\\n        <div class=\\\" card-header\\\">\\n          <h5 class=\\\" card-category\\\">Tests</h5>\\n          <h3 class=\\\" card-title\\\">{{dashBoardDataObjects.orgTestsText}}</h3>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\"chart-area\\\"><canvas id=\\\"SystemTestsChart\\\"> </canvas></div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-3 col-md-6\\\">\\n      <div class=\\\" card card-stats\\\">\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-5\\\">\\n              <div class=\\\" info-icon text-center icon-warning\\\">\\n                <i class=\\\" et-icons icon-spaceship\\\"> </i>\\n              </div>\\n            </div>\\n            <div class=\\\" col-7\\\">\\n              <div class=\\\" numbers\\\">\\n                <h4 class=\\\"\\\">Total Executions</h4>\\n                <h3 class=\\\" card-title\\\">{{dashBoardDataObjects.executionCount}}</h3>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\" card-footer\\\">\\n          <hr />\\n          <div class=\\\" stats\\\">\\n            <i class=\\\" et-icons icon-sound-wave\\\"> </i> Last Update: 03/15/2021\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-3 col-md-6\\\">\\n      <div class=\\\" card card-stats\\\">\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-5\\\">\\n              <div class=\\\" info-icon text-center icon-primary\\\">\\n                <i class=\\\" et-icons icon-paper\\\"> </i>\\n              </div>\\n            </div>\\n            <div class=\\\" col-7\\\">\\n              <div class=\\\" numbers\\\">\\n                <h4 class=\\\"\\\">Tests</h4>\\n                <h3 class=\\\" card-title\\\">660</h3>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\" card-footer\\\">\\n          <hr />\\n          <div class=\\\" stats\\\">\\n            <i class=\\\" et-icons icon-sound-wave\\\"> </i> Last Update: 03/15/2021\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-3 col-md-6\\\">\\n      <div class=\\\" card card-stats\\\">\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-5\\\">\\n              <div class=\\\" info-icon text-center icon-success\\\">\\n                <i class=\\\" et-icons icon-check-2\\\"> </i>\\n              </div>\\n            </div>\\n            <div class=\\\" col-7\\\">\\n              <div class=\\\" numbers\\\">\\n                <h4 class=\\\"\\\">Passed Tests</h4>\\n                <h3 class=\\\" card-title\\\">656</h3>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\" card-footer\\\">\\n          <hr />\\n          <div class=\\\" stats\\\">\\n            <i class=\\\" et-icons icon-sound-wave\\\"> </i> Last Run: 03/15/2021\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-3 col-md-6\\\">\\n      <div class=\\\" card card-stats\\\">\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" row\\\">\\n            <div class=\\\" col-5\\\">\\n              <div class=\\\" info-icon text-center icon-danger\\\">\\n                <i class=\\\" et-icons icon-simple-remove\\\"> </i>\\n              </div>\\n            </div>\\n            <div class=\\\" col-7\\\">\\n              <div class=\\\" numbers\\\">\\n                <h4 class=\\\"\\\">Tests Failed</h4>\\n                <h3 class=\\\" card-title\\\">4</h3>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\" card-footer\\\">\\n          <hr />\\n\\n          <div class=\\\" stats\\\">\\n            <i class=\\\" et-icons icon-sound-wave\\\"> </i> Last Updated: 03/15/2021\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\" col-lg-12\\\">\\n      <div class=\\\" card card-tasks\\\">\\n        <div class=\\\" card-header\\\">\\n          <h4 class=\\\"text-danger title d-inline\\\">Active Failed Tests({{dashBoardDataObjects.failedTestCount}})</h4>\\n        </div>\\n        <div class=\\\" card-body\\\">\\n          <div class=\\\" table-full-width table-responsive\\\">\\n            <table class=\\\" table\\\">\\n              <tbody>\\n                <tr *ngFor=\\\"let failedTest of dashBoardDataObjects.activeFailedTests\\\">\\n                  <td>\\n                    <p class=\\\"text-danger\\\">{{failedTest.Description}}</p>\\n                  </td>\\n                  <td>\\n                    <p class=\\\"title\\\" style=\\\"min-width: 100px;\\\">Failing For:</p>\\n                    <p class=\\\"text-danger\\\"><b>{{failedTest.FailingFor}}</b></p>\\n                  </td>\\n                  <td>\\n                    <p class=\\\"title\\\" style=\\\"min-width: 100px;\\\">System:</p>\\n                    <p><b>{{failedTest.System}}</b></p>\\n                  </td>\\n                  <td>\\n                    <p class=\\\"title\\\" style=\\\"min-width: 100px;\\\">Jira Link:</p>\\n                    <p><b><a>{{failedTest.JiraID}}</a></b></p>\\n                  </td>\\n                  <td>\\n                    <p class=\\\"title\\\" style=\\\"min-width: 150px;\\\">First Failure Date:</p>\\n                    <p>{{failedTest.FirstFailureDate}}</p>\\n                  </td>\\n                  <td>\\n                    <p class=\\\"title\\\" style=\\\"min-width: 150px;\\\">Last Failure Date:</p>\\n                    <p>{{failedTest.LastFailureDate}}</p>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { ExecutionMetric } from \"./executionMetric\";\r\nimport { TestExecution } from \"./testExecution\";\r\nimport { TestSystem } from \"./testSystem\";\r\n\r\nexport class DashboardDataObjects {\r\n    public totalExecutionsChartData: any;\r\n    public passFailChartData: any;\r\n    public systemTestsChartData: any;\r\n    public systemTestsChartCanvas: any;\r\n    public systemTestsChartCTX: any;\r\n    //A raw collection of the data for use to derive specific metrics\r\n    public allExecutionData: ExecutionMetric[] = [];\r\n    //These are used for switching data for the Line Graph\r\n    public allTestExecutions: number[] = [];\r\n    public psTestExecutions: number[] = [];\r\n    public osTestExecutions: number[] = [];\r\n    public wsTestExecutions: number[] = [];\r\n    public executionLineChartLabels: string[] = [];\r\n    public executionChartText: string = \"\";\r\n    public orgTestsText: string = \"\";\r\n    //These are used for the Pass/Fail percent pie chart\r\n    public passFailPercent: number = 0;\r\n    public passFailFailed: number = 0;\r\n    public passFailTotal: number = 0;\r\n    public passFailPassed: number = 0;\r\n    public pieChartDataSet: number[] = [];\r\n    //These are used for the system test bar chart\r\n    public systemAllTestsBarLabels: string[] = [];\r\n    public systemTestsBarAllData: number[] = [];\r\n    public systemPSTestsBarLabels: string[] = [];\r\n    public systemTestsBarPSData: number[] = [];\r\n    public systemCITestsBarLabels: string[] = [];\r\n    public systemTestsBarCIData: number[] = [];\r\n    public systemDGTestsBarLabels: string[] = [];\r\n    public systemTestsBarDGData: number[] = [];\r\n    //These are used for determining what data metric is selected\r\n    public allClicked: boolean = true;\r\n    public psClicked: boolean = false;\r\n    public ciClicked: boolean = false;\r\n    public dgClicked: boolean = false;\r\n    //These are for switching front end counts when the systme types are changed\r\n    public executionCount: number = 0;\r\n    public testCount: number = 0;\r\n    public passedTestCount: number = 0;\r\n    public failedTestCount: number = 0;\r\n    //These are used to map various data types together\r\n    public activeFailedTests: ActiveFailedTest[];\r\n    public testSystems: TestSystem[] = [];\r\n    public failedTests: TestExecution[] = [];\r\n}","export class TestMetric {\r\n    system: string;\r\n    testCount: number;\r\n}","export class TestSystem {\r\n    id: string;\r\n    name: string;\r\n    shortName: string;\r\n    type: string;\r\n}","export default \".pad-down10 {\\n  padding-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL0M6XFxQcm9qZWN0c1xcQXV0b0Rhc2hib2FyZC9zcmNcXGFwcFxccGFnZXNcXGRhc2hib2FyZFxcZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFkLWRvd24xMCB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICB9IiwiLnBhZC1kb3duMTAge1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbn0iXX0= */\"","import { AfterViewInit, Component, OnInit } from \"@angular/core\";\nimport Chart from \"chart.js\";\nimport { DashboardDataObjects } from \"src/app/models/dashboardDataObjects\";\nimport { DashboardService } from \"src/app/services/dasboardService\";\nimport { ChartOptionsUtils } from \"../utils/ChartOptionsUtil\";\n\nclass ActiveFailedTest{\n  Description: string;\n  FailingFor: string;\n  System: string;\n  FirstFailureDate: string;\n  LastFailureDate: string;\n  JiraID: string;\n}\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"dashboard.component.html\",\n  styleUrls: [\"dashboard.component.scss\"]\n})\nexport class DashboardComponent implements OnInit, AfterViewInit {\n\n  private chartOptionsUtil: ChartOptionsUtils;\n  private dashBoardDataObjects: DashboardDataObjects = new DashboardDataObjects();\n  \n  constructor(private dashboardService: DashboardService) {\n    this.chartOptionsUtil = new ChartOptionsUtils();\n  }\n\n  ngOnInit() {\n    //Get all tests so we can map systems to number of tests for those systems\n    this.dashBoardDataObjects.executionChartText = \"All Test Executions\";\n    let testMetrics = this.dashboardService.getAllTestMetrics();\n    testMetrics.forEach(testMetric => {\n      this.dashBoardDataObjects.systemAllTestsBarLabels.push(testMetric.system);\n      this.dashBoardDataObjects.systemTestsBarAllData.push(testMetric.testCount);\n      this.dashBoardDataObjects.testCount += testMetric.testCount;\n    });\n    this.dashBoardDataObjects.orgTestsText = \"All Tests (\" + this.dashBoardDataObjects.testCount + \")\";\n    this.dashBoardDataObjects.systemTestsChartCanvas = document.getElementById(\"SystemTestsChart\");\n    this.dashBoardDataObjects.systemTestsChartCTX = this.dashBoardDataObjects.systemTestsChartCanvas.getContext(\"2d\");\n    this.dashBoardDataObjects.systemTestsChartData = new Chart(this.dashBoardDataObjects.systemTestsChartCTX, this.createSystemTestsBarGraph(this.chartOptionsUtil.getBarChartOptionsConfig(), this.dashBoardDataObjects.systemTestsBarAllData, this.dashBoardDataObjects.systemAllTestsBarLabels));\n\n    this.dashboardService.getTestAllExecutionMetrics().subscribe(\n      metrics => {\n        metrics.sort(function (a, b) { return Number(a.id) - Number(b.id); });\n        this.dashBoardDataObjects.allExecutionData = metrics;\n        this.dashBoardDataObjects.passFailFailed = 0;\n        this.dashBoardDataObjects.passFailTotal = 0;\n        metrics.forEach(metric => {\n          this.dashBoardDataObjects.allTestExecutions.push(Number(metric.totalExecutions));\n          this.dashBoardDataObjects.psTestExecutions.push(Number(metric.dbExecutions));\n          this.dashBoardDataObjects.osTestExecutions.push(Number(metric.osExecutions));\n          this.dashBoardDataObjects.wsTestExecutions.push(Number(metric.wsExecutions));\n          this.dashBoardDataObjects.executionLineChartLabels.push(metric.exeuctionRange)\n          this.dashBoardDataObjects.passFailFailed += (Number(metric.dbFails) + Number(metric.osFails) + Number(metric.wsFails));\n          this.dashBoardDataObjects.passFailTotal += Number(metric.totalExecutions);\n          this.dashBoardDataObjects.passFailPassed = this.dashBoardDataObjects.passFailTotal - this.dashBoardDataObjects.passFailFailed;\n          this.calculatePercent();\n          this.dashBoardDataObjects.pieChartDataSet = [this.dashBoardDataObjects.passFailPassed, this.dashBoardDataObjects.passFailFailed]\n          this.dashBoardDataObjects.executionCount += Number(metric.totalExecutions);\n        });\n        \n        let totalExecutionsCanvas: any = document.getElementById(\"totalExecutionsChart\");\n        let totalExecutionsCTX: any = totalExecutionsCanvas.getContext(\"2d\");\n        this.dashBoardDataObjects.totalExecutionsChartData = new Chart(totalExecutionsCTX, this.createLineGraph(this.chartOptionsUtil.getGradientChartOptionsConfigurationWithTooltipRed()));\n        \n        let passFailPercentCanvas: any = document.getElementById(\"passfailperc\");\n        let passFailPercentCTX: any = passFailPercentCanvas.getContext(\"2d\");\n        this.dashBoardDataObjects.passFailChartData = new Chart(passFailPercentCTX, this.chartOptionsUtil.createPieChart([\"Pass\", \"Fail\"], this.dashBoardDataObjects.pieChartDataSet, \"Executions\", [\"#00c09d\", \"#e2e2e2\"], false));\n    });\n    \n    this.updateActiveFailedTests();\n  }\n\n  ngAfterViewInit() {\n    let ciTestMetrics = this.dashboardService.getCITestMetrics();\n    ciTestMetrics.forEach(metric => {\n      this.dashBoardDataObjects.systemCITestsBarLabels.push(metric.system)\n      this.dashBoardDataObjects.systemTestsBarCIData.push(metric.testCount);\n    });\n\n    let psTestMetrics = this.dashboardService.getPSTestMetrics();\n    psTestMetrics.forEach(metric => {\n      this.dashBoardDataObjects.systemPSTestsBarLabels.push(metric.system)\n      this.dashBoardDataObjects.systemTestsBarPSData.push(metric.testCount);\n    });\n\n    let dgTestMetrics = this.dashboardService.getDGTestMetrics();\n    dgTestMetrics.forEach(metric => {\n      this.dashBoardDataObjects.systemDGTestsBarLabels.push(metric.system)\n      this.dashBoardDataObjects.systemTestsBarDGData.push(metric.testCount);\n    });\n  }\ns\n  public updateOptions(clicked) {\n    var executionsDataSet = [];\n    var testDataSet = [];\n    var testDataLabels = [];\n    this.dashBoardDataObjects.allClicked = false;\n    this.dashBoardDataObjects.psClicked = false;\n    this.dashBoardDataObjects.ciClicked = false;\n    this.dashBoardDataObjects.dgClicked = false;\n    this.dashBoardDataObjects.passFailFailed = 0;\n    this.dashBoardDataObjects.passFailTotal = 0;\n    if (clicked == \"allClicked\") {\n      this.dashBoardDataObjects.executionChartText = \"All Test Executions\";\n      this.dashBoardDataObjects.allClicked = true;\n      testDataLabels = this.dashBoardDataObjects.systemAllTestsBarLabels;\n      executionsDataSet = this.dashBoardDataObjects.allTestExecutions;\n      testDataSet = this.dashBoardDataObjects.systemTestsBarAllData;\n      this.dashBoardDataObjects.allExecutionData.forEach(execution => {\n        this.dashBoardDataObjects.passFailFailed += (Number(execution.dbFails) + Number(execution.osFails) + Number(execution.wsFails));\n        this.dashBoardDataObjects.passFailTotal += Number(execution.totalExecutions);\n      })\n      let totalTests = 0;\n      this.dashBoardDataObjects.systemTestsBarAllData.forEach(test =>{\n        totalTests += test\n      });\n      this.dashBoardDataObjects.orgTestsText = \"All Tests (\" + totalTests + \")\";\n\n      //this.updateActiveFailedTests();\n    }\n    if (clicked == \"psClicked\") {\n      this.dashBoardDataObjects.psClicked = true;\n      this.dashBoardDataObjects.executionChartText = \"Public Security Test Executions\";\n      testDataLabels = this.dashBoardDataObjects.systemPSTestsBarLabels;\n      executionsDataSet = this.dashBoardDataObjects.psTestExecutions;\n      testDataSet = this.dashBoardDataObjects.systemTestsBarPSData;\n      this.dashBoardDataObjects.allExecutionData.forEach(execution => {\n        this.dashBoardDataObjects.passFailFailed += Number(execution.dbFails);\n        this.dashBoardDataObjects.passFailTotal += Number(execution.dbExecutions);\n      })\n      let totalTests = 0;\n      this.dashBoardDataObjects.systemTestsBarPSData.forEach(test =>{\n        totalTests += test\n      });\n      this.dashBoardDataObjects.orgTestsText = \"Public Security Tests (\" + totalTests + \")\";\n      //this.updateActiveFailedTests();\n    }\n    if (clicked == \"ciClicked\") {\n      this.dashBoardDataObjects.ciClicked = true;\n      this.dashBoardDataObjects.executionChartText = \"Civil Identity Test Executions\";\n      executionsDataSet = this.dashBoardDataObjects.osTestExecutions;\n      testDataSet = this.dashBoardDataObjects.systemTestsBarCIData;\n      testDataLabels = this.dashBoardDataObjects.systemCITestsBarLabels;\n      this.dashBoardDataObjects.allExecutionData.forEach(execution => {\n        this.dashBoardDataObjects.passFailFailed += Number(execution.osFails);\n        this.dashBoardDataObjects.passFailTotal += Number(execution.osExecutions);\n      })\n      let totalTests = 0;\n      this.dashBoardDataObjects.systemTestsBarCIData.forEach(test =>{\n        totalTests += test\n      });\n      this.dashBoardDataObjects.orgTestsText = \"Civil Identity Tests (\" + totalTests + \")\";\n    }\n    if (clicked == \"dgClicked\") {\n      this.dashBoardDataObjects.dgClicked = true;\n      this.dashBoardDataObjects.executionChartText = \"Digital Test Executions\";\n      executionsDataSet = this.dashBoardDataObjects.wsTestExecutions;\n      testDataSet = this.dashBoardDataObjects.systemTestsBarDGData;\n      testDataLabels = this.dashBoardDataObjects.systemDGTestsBarLabels;\n      this.dashBoardDataObjects.allExecutionData.forEach(execution => {\n        this.dashBoardDataObjects.passFailFailed += Number(execution.wsFails);\n        this.dashBoardDataObjects.passFailTotal += Number(execution.wsExecutions);\n      })\n      let totalTests = 0;\n      this.dashBoardDataObjects.systemTestsBarDGData.forEach(test =>{\n        totalTests += test\n      });\n      this.dashBoardDataObjects.orgTestsText = \"Digital Tests (\" + totalTests + \")\";\n    }\n    this.dashBoardDataObjects.passFailPassed = this.dashBoardDataObjects.passFailFailed + this.dashBoardDataObjects.passFailTotal;\n    this.calculatePercent();\n\n    this.dashBoardDataObjects.pieChartDataSet = [this.dashBoardDataObjects.passFailPassed, this.dashBoardDataObjects.passFailFailed]\n    this.dashBoardDataObjects.passFailChartData.data.datasets[0].data = this.dashBoardDataObjects.pieChartDataSet;\n    this.dashBoardDataObjects.passFailChartData.update();\n    \n    this.dashBoardDataObjects.totalExecutionsChartData.data.datasets[0].data = executionsDataSet;\n    this.dashBoardDataObjects.totalExecutionsChartData.update();\n\n    this.dashBoardDataObjects.systemTestsChartData.data.datasets[0].data = testDataSet;\n    this.dashBoardDataObjects.systemTestsChartData.data.labels = testDataLabels;\n    this.dashBoardDataObjects.systemTestsChartData.update();\n  }\n\n  public updateActiveFailedTests() {\n    var arr: ActiveFailedTest[] = []; \n    var fail1 = new ActiveFailedTest();\n    fail1.Description = \"DM View Registration\";\n    fail1.FailingFor = \"3 days\";\n    fail1.FirstFailureDate = \"03/12/2021\";\n    fail1.LastFailureDate = \"03/15/2021\";\n    fail1.System = \"MBIS\";\n    fail1.JiraID = \"BBDEX-01\";\n    arr.push(fail1);\n\n    var fail2 = new ActiveFailedTest();\n    fail2.Description = \"Reverse Verification\";\n    fail2.FailingFor = \"2 days\";\n    fail2.FirstFailureDate = \"03/14/2021\";\n    fail2.LastFailureDate = \"03/15/2021\";\n    fail2.System = \"MBIS\";\n    fail2.JiraID = \"BBDEX-02\";\n    arr.push(fail2);\n\n    var fail3 = new ActiveFailedTest();\n    fail3.Description = \"Login\";\n    fail3.FailingFor = \"1 day\";\n    fail3.FirstFailureDate = \"03/15/2021\";\n    fail3.LastFailureDate = \"03/15/2021\";\n    fail3.System = \"MFace\";\n    fail3.JiraID = \"BBDEX-05\";\n    arr.push(fail3);\n\n    var fail4 = new ActiveFailedTest();\n    fail4.Description = \"Update Record\";\n    fail4.FailingFor = \"1 day\";\n    fail4.FirstFailureDate = \"03/12/2021\";\n    fail4.LastFailureDate = \"03/12/2021\";\n    fail4.System = \"Back Office\";\n    fail4.JiraID = \"BBDEX-48\";\n    arr.push(fail4);\n\n    this.dashBoardDataObjects.activeFailedTests = arr;\n  }\n\n  private ConvertToCSV(objArray, headerList) {\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\n    let str = '';\n    let row = 'S.No,';\n    for (let index in headerList) {\n     row += headerList[index] + ',';\n    }\n    row = row.slice(0, -1);\n    str += row + '\\r\\n';\n    for (let i = 0; i < array.length; i++) {\n     let line = (i+1)+'';\n     for (let index in headerList) {\n      let head = headerList[index];\n      line += ',' + array[i][head];\n     }\n     str += line + '\\r\\n';\n    }\n    return str;\n  }\n\n  public downloadFile(filename='Executions') {\n    let csvData = this.ConvertToCSV(this.dashboardService.getTestExecutionData(), ['test','executionDate', 'host', 'id', 'remediationNeeded', \"remediationTook\", \"result\", \"system\", \"testDuration\", \"testId\"]);\n    console.log(csvData)\n    let blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    let dwldLink = document.createElement(\"a\");\n    let url = URL.createObjectURL(blob);\n    let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n        dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename + \".csv\");\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n\n  private calculatePercent(){\n    var failingPercent = 100 / this.dashBoardDataObjects.passFailTotal * this.dashBoardDataObjects.passFailFailed;\n    var PassingPercent = 100 - failingPercent;\n    this.dashBoardDataObjects.passFailPercent = (Math.round(PassingPercent * 10) / 10);\n  }\n\n  private createLineGraph(chartOptions){\n    let totalExecutionsCanvas: any = document.getElementById(\"totalExecutionsChart\");\n    let totalExecutionsCTX: any = totalExecutionsCanvas.getContext(\"2d\");\n    var gradientStroke = totalExecutionsCTX.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(233,32,16,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(233,32,16,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //red colors\n    var config = {\n      type: \"line\",\n      data: {\n        labels: this.dashBoardDataObjects.executionLineChartLabels,\n        datasets: [\n          {\n            label: \"Test Executions\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            borderColor: \"#ec250d\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: \"#ec250d\",\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: \"#ec250d\",\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.dashBoardDataObjects.allTestExecutions\n          }\n        ]\n      },\n      options: chartOptions\n    };\n    return config;\n  }\n\n  public createSystemTestsBarGraph(chartOptions, dataSet, labels) {\n    var gradientStroke = this.dashBoardDataObjects.systemTestsChartCTX.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n    //System Tests Config\n    var config: any = {\n      type: \"bar\",\n      responsive: true,\n      legend: {\n        display: false\n      },\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"Systems\",\n            fill: true,\n            backgroundColor: gradientStroke,\n            hoverBackgroundColor: gradientStroke,\n            borderColor: \"#1f8ef1\",\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: dataSet\n          }\n        ]\n      },\n      options: chartOptions,\n      maintainAspectRatio: false,\n      tooltips: {\n        backgroundColor: \"#f5f5f5\",\n        titleFontColor: \"#333\",\n        bodyFontColor: \"#666\",\n        bodySpacing: 4,\n        xPadding: 12,\n        mode: \"nearest\",\n        intersect: 0,\n        position: \"nearest\"\n      },\n      scales: {\n        yAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.1)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              suggestedMin: 10,\n              suggestedMax: 40,\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ],\n\n        xAxes: [\n          {\n            gridLines: {\n              drawBorder: false,\n              color: \"rgba(29,140,248,0.1)\",\n              zeroLineColor: \"transparent\"\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9e9e9e\"\n            }\n          }\n        ]\n      }\n    };\n    return config;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { ComponentsModule } from \"../../components/components.module\";\nimport { BsDropdownModule } from \"ngx-bootstrap/dropdown\";\nimport { ProgressbarModule } from \"ngx-bootstrap/progressbar\";\nimport { TooltipModule } from \"ngx-bootstrap/tooltip\";\nimport { DashboardRoutes } from \"./dashboard.routing\";\nimport { DashboardComponent } from \"./dashboard.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DashboardRoutes),\n    BsDropdownModule.forRoot(),\n    ComponentsModule,\n    ProgressbarModule.forRoot(),\n    TooltipModule.forRoot()\n  ],\n  declarations: [DashboardComponent],\n  exports: [DashboardComponent]\n})\nexport class DashboardModule {}\n","import { Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"./dashboard.component\";\n\nexport const DashboardRoutes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"dashboard\",\n        component: DashboardComponent\n      }\n    ]\n  }\n];\n","import { Injectable } from '@angular/core';\r\nimport { BaselineException } from '../models/baselineException';\r\nimport { DatabaseHost } from '../models/databaseHosts';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Test } from '../models/test';\r\nimport { ExecutionMetric } from '../models/executionMetric';\r\nimport { TestSystem } from '../models/testSystem';\r\nimport { TestExecution } from '../models/testExecution';\r\nimport { TestMetric } from '../models/testMetric';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n      \r\n    databaseHosts = [\r\n          {\r\n              \"host\": \"uatdb95w92m7:6010\",\r\n              \"dbType\": \"MySql\",\r\n              \"environmentType\": \"non-prod\",\r\n              \"testCount\": 25,\r\n              'lastExecutionDate': 'Jan 20, 2021'\r\n          },\r\n          {\r\n              \"host\": \"devdb3w106m7:6000\",\r\n              \"dbType\": \"MySql\",\r\n              \"environmentType\": \"dev\",\r\n              \"testCount\": 25,\r\n              'lastExecutionDate': 'Jan 20, 2021'\r\n          },\r\n          {\r\n              \"host\": \"ATL1L-D64H353\",\r\n              \"dbType\": \"MySql\",\r\n              \"environmentType\": \"localhost\",\r\n              \"testCount\": 25,\r\n              'lastExecutionDate': 'Jan 20, 2021'\r\n          },\r\n          {\r\n              \"host\": \"ATL1L-D64H353\",\r\n              \"dbType\": \"MSSql\",\r\n              \"environmentType\": \"localhost\",\r\n              \"testCount\": 25,\r\n              'lastExecutionDate': 'Jan 20, 2021' \r\n          }\r\n    ]\r\n  \r\n    testExecutions = [\r\n      {\r\n        \"test\": \"Section Header 2.13 Ensure sa Login Account is set to Disabled\",\r\n        \"executionDate\": \"03/08/2021 11:02pm\",\r\n        \"host\": \"dev000001\",\r\n        \"id\": \"1\",\r\n        \"remediationNeeded\": false,\r\n        \"remediationTook\": \"\",\r\n        \"result\": \"pass\",\r\n        \"steps\": [\r\n          {\r\n            \"duration\": \"0.005667209625244141\",\r\n            \"name\": \"Then the \\\"sa\\\" account is removed on \\\"dev000001\\\"\",\r\n            \"status\": \"pass\"\r\n          }\r\n        ],\r\n        \"system\": \"mssql\",\r\n        \"testDuration\": \"0.005877209625244141\",\r\n        \"testId\": \"5\"\r\n      },\r\n      {\r\n        \"test\": \"Section Header 2.11 Ensure Ensure non-standard ports are not used\",\r\n        \"executionDate\": \"03/08/2021 11:02pm\",\r\n        \"host\": \"dev000001\",\r\n        \"id\": \"1\",\r\n        \"remediationNeeded\": false,\r\n        \"remediationTook\": \"\",\r\n        \"result\": \"pass\",\r\n        \"steps\": [\r\n          {\r\n            \"duration\": \"0.005667209625244141\",\r\n            \"name\": \"Then SQL Server is configured to use non-standard ports\",\r\n            \"status\": \"pass\"\r\n          }\r\n        ],\r\n        \"system\": \"mssql\",\r\n        \"testDuration\": \"0.005877209625244141\",\r\n        \"testId\": \"6\"\r\n      }\r\n    ]\r\n\r\n    getTestAllExecutionMetrics(){\r\n        let allMetrics = this.httpClient.get<ExecutionMetric[]>(\"https://kf460t61l8.execute-api.us-west-1.amazonaws.com/dev/get\");\r\n        return allMetrics;\r\n    }\r\n    \r\n    getTestResults() {\r\n        return this.httpClient.get<TestExecution[]>(\"https://irjzeor466.execute-api.us-west-1.amazonaws.com/dev/get\");\r\n    }\r\n\r\n    getAllTestMetrics() {\r\n        //return this.httpClient.get<Test[]>(\"https://vp4fjvs6vb.execute-api.us-west-1.amazonaws.com/dev/get\");\r\n        let testMetrics: TestMetric[] = [];\r\n        \r\n        let tm1: TestMetric = new TestMetric();\r\n        tm1.system = \"Public Security\";\r\n        tm1.testCount = 254\r\n        testMetrics.push(tm1);\r\n\r\n        let tm2: TestMetric = new TestMetric();\r\n        tm2.system = \"Civil Identity\";\r\n        tm2.testCount = 198\r\n        testMetrics.push(tm2);\r\n\r\n        let tm3: TestMetric = new TestMetric();\r\n        tm3.system = \"Digital\";\r\n        tm3.testCount = 140\r\n        testMetrics.push(tm3);\r\n        return testMetrics;\r\n    }\r\n\r\n    getPSTestMetrics() {\r\n      let testMetrics: TestMetric[] = [];\r\n      \r\n      let tm1: TestMetric = new TestMetric();\r\n      tm1.system = \"MBIS\";\r\n      tm1.testCount = 121\r\n      testMetrics.push(tm1);\r\n\r\n      let tm2: TestMetric = new TestMetric();\r\n      tm2.system = \"TPE/LiveScan\";\r\n      tm2.testCount = 59\r\n      testMetrics.push(tm2);\r\n\r\n      let tm3: TestMetric = new TestMetric();\r\n      tm3.system = \"M-Face\";\r\n      tm3.testCount = 50\r\n      testMetrics.push(tm3);\r\n\r\n      let tm4: TestMetric = new TestMetric();\r\n      tm4.system = \"UES\";\r\n      tm4.testCount = 24\r\n      testMetrics.push(tm4);\r\n      return testMetrics;\r\n    }\r\n\r\n    getCITestMetrics() {\r\n      let testMetrics: TestMetric[] = [];\r\n      \r\n      let tm1: TestMetric = new TestMetric();\r\n      tm1.system = \"Web Enrollment\";\r\n      tm1.testCount = 121\r\n      testMetrics.push(tm1);\r\n\r\n      let tm2: TestMetric = new TestMetric();\r\n      tm2.system = \"Back Office\";\r\n      tm2.testCount = 200\r\n      testMetrics.push(tm2);\r\n\r\n      let tm3: TestMetric = new TestMetric();\r\n      tm3.system = \"Testing\";\r\n      tm3.testCount = 50\r\n      testMetrics.push(tm3);\r\n      return testMetrics;\r\n    }\r\n\r\n    getDGTestMetrics() {\r\n      let testMetrics: TestMetric[] = [];\r\n      \r\n      let tm1: TestMetric = new TestMetric();\r\n      tm1.system = \"MID\";\r\n      tm1.testCount = 41\r\n      testMetrics.push(tm1);\r\n\r\n      let tm2: TestMetric = new TestMetric();\r\n      tm2.system = \"Proofing\";\r\n      tm2.testCount = 58\r\n      testMetrics.push(tm2);\r\n\r\n      return testMetrics;\r\n    }\r\n\r\n    getSystems() {\r\n      //return this.httpClient.get<TestSystem[]>(\"https://tff01d8t22.execute-api.us-west-1.amazonaws.com/dev/get\");\r\n      let testSystems: TestSystem[] = [];\r\n      \r\n      let ts1: TestSystem = new TestSystem();\r\n      ts1.id = \"1\";\r\n      ts1.name = \"Public Security\";\r\n      ts1.shortName = \"PS\";\r\n      testSystems.push(ts1);\r\n\r\n      let ts2: TestSystem = new TestSystem();\r\n      ts2.id = \"2\";\r\n      ts2.name = \"Civil Identity\";\r\n      ts2.shortName = \"CI\";\r\n      testSystems.push(ts2);\r\n\r\n      let ts3: TestSystem = new TestSystem();\r\n      ts3.id = \"3\";\r\n      ts3.name = \"Digital\";\r\n      ts3.shortName = \"DG\";\r\n      testSystems.push(ts3);\r\n      \r\n      return testSystems;\r\n    }\r\n  \r\n    getDatabaseHosts() {\r\n      let jsonObject: any = JSON.parse(JSON.stringify(this.databaseHosts));\r\n      let results: DatabaseHost[] = <DatabaseHost[]>jsonObject;\r\n      return results;\r\n    }\r\n  \r\n    getJiraBaselineExceptions() {\r\n      var exceptions: BaselineException[] = []; \r\n      return exceptions\r\n    }\r\n\r\n    getTestExecutionData() {\r\n      let jsonObject: any = JSON.parse(JSON.stringify(this.testExecutions));\r\n      let results: TestExecution[] = <TestExecution[]>jsonObject;\r\n      return results;\r\n    }\r\n  }"],"sourceRoot":"webpack:///"}